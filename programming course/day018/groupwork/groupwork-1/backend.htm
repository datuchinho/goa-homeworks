<!DOCTYPE html>
<html lang="ka">
<head>
    <meta charset="UTF-8">
    <title>Back-end დეველოპმენტი</title>
</head>
<body>

    <h1>Back-end დეველოპმენტი</h1>
    <p><strong>სლაიდების დიაპაზონი:</strong> სლაიდები 54–81</p>

    <h2>მოკლე მიმოხილვა:</h2>
    <p>
        Back-end დეველოპმენტი გულისხმობს ვებსაიტის იმ ნაწილის შექმნას, რომელიც "კულისებს მიღმა" მუშაობს. 
        სწორედ აქ ხდება მონაცემების დამუშავება, შენახვა და გადაცემა მომხმარებლის მოთხოვნის შესაბამისად.
        ამ კურსში შეისწავლი როგორ მუშაობს სერვერი, როგორ დაუკავშირდე მონაცემთა ბაზას და როგორ შექმნა ფუნქციური ლოგიკა ვებსაიტისთვის.
    </p>

    <h2>რას ისწავლი:</h2>
    <ul>
        <li><strong>Node.js:</strong> JavaScript-ის პლატფორმა, რომელიც საშუალებას გაძლევს შექმნა სწრაფი და მასშტაბირებადი სერვერები. ისწავლი API-ების შექმნას, მოთხოვნის დამუშავებას და სერვერის მართვას.</li>
        <li><strong>Django:</strong> ძლიერი Python ფრეიმვორკი, რომელიც გამოიყენება უსაფრთხო და სანდო ვებსაიტების შესაქმნელად. ისწავლი როგორ შექმნა მოდელები, ვიუები და შაბლონები (templates).</li>
    </ul>

    <h2>შეძენილი უნარები:</h2>
    <ul>
        <li>სერვერული ლოგიკის დაწერა</li>
        <li>მონაცემთა ბაზებთან მუშაობა (შენახვა, წაკითხვა, განახლება, წაშლა)</li>
        <li>RESTful API-ების შექმნა</li>
        <li>მომხმარებლის ავთენტიფიკაცია და ავტორიზაცია</li>
        <li>დამოკიდებულებების მართვა და მოდულარობა</li>
    </ul>

    <h2>რატომ არის ეს მნიშვნელოვანი:</h2>
    <p>
        ვებსაიტი, რომელიც ინახავს მონაცემებს, აკეთებს ავტორიზაციას ან აქვს მომხმარებელთა სისტემა — საჭიროებს Back-end ლოგიკას.
        ამ უნარების ცოდნა აუცილებელია სრული სტეკის დეველოპერობისთვის (Full Stack Developer).
    </p>

    <p><a href="gw3.htm">← დაბრუნება კურსების ჩამონათვალზე</a></p>

</body>
</html>
